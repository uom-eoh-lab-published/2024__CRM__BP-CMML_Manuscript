'C1B' = '#C67942',
'C2A' = '#7CB7B0',
'C2B' = '#539690'))
row_anno <- rowAnnotation(df=Identity, col = colors_annotation,
gp = gpar(lwd =0.25, col = 'black'), simple_anno_size = unit(5, "mm"),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(RF_Cluster = list(direction = "vertical")))
breaks_val <- seq(from = 0, to = 1, length.out = 14)
col_heatmap_guide <- colorRamp2(breaks = breaks_val,colors = rev(c("#67000D",brew_mix)))
set.seed(1337)
dendro <- stats::hclust(dist(t(BeatAML_drug_response)), method = 'ward.D') %>% as.dendrogram %>% ladderize
plot(dendro, axes=F)
par(lwd=3)
Hierchical_clusters_drugs <- sort(cutree(dendro, k = 3))
drug_df <- data.frame(row.names = names(Hierchical_clusters_drugs))
for (drug in rownames(drug_df)) {
drug_df[drug,'Hierarchical_cluster'] <- Hierchical_clusters_drugs[[drug]]
}
drug_df$Hierarchical_cluster <- factor(drug_df$Hierarchical_cluster, levels = c('1','2','3'))
HMap_BeatAMLdrugs <- Heatmap(BeatAML_drug_response[,rownames(drug_df)],
name = 'ssGSEA Score',
row_split = RF_cluster_metadata$RF_Cluster_short,
left_annotation  = row_anno,
column_split = drug_df$Hierarchical_cluster,
col = col_heatmap_guide,
rect_gp = gpar(col = "black", lwd = 0.05),
cluster_row_slices = F,
cluster_column_slices = F,
column_title_gp = gpar(fontsize=0, fontface='bold'),
row_names_gp = gpar(fontsize=9),
column_gap = unit(c(2.5,2.5), "mm"),
cluster_rows = T,
cluster_columns = T,
column_names_gp = gpar(fontsize=9),
show_heatmap_legend = F,
heatmap_legend_param = list(legend_direction = "horizontal",
legend_width = unit(5, "cm")),
row_names_side = 'right')
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
png(filename = paste(figures_folder, '/Fig_07/Panel_D.png', sep = ''), units = "cm", width = 30, height = 22, res = 300)
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
BeatAML_drug_response <- as.matrix(RF_cluster_metadata[,91:177])
colnames(BeatAML_drug_response) <- c(
"A-674563",
"ABT-737",
"Afatinib (BIBW-2992)",
"AT7519",
"Axitinib (AG-013736)",
"AZD1152-HQPA (AZD2811)",
"AZD1480",
"Bay 11-7085",
"BEZ235",
"Birinapant",
"Bortezomib (Velcade)",
"Bosutinib (SKI-606)",
"Cabozantinib",
"CI-1040 (PD184352)",
"Crenolanib",
"Crizotinib (PF-2341066)",
"CYT387",
"Dasatinib",
"Doramapimod (BIRB 796)",
"Dovitinib (CHIR-258)",
"Elesclomol",
"Entospletinib (GS-9973)",
"Entrectinib",
"Flavopiridol",
"Foretinib (XL880)",
"GDC-0941",
"Gilteritinib",
"GSK-1838705A",
"GW-2580",
"H-89",
"Ibrutinib (PCI-32765)",
"Idelalisib",
"Indisulam",
"INK-128",
"JAK Inhibitor I",
"JNJ-28312141",
"JNJ-38877605",
"JQ1",
"KI20227",
"KU-55933",
"KW-2449",
"Lenalidomide",
"Lenvatinib",
"Linifanib (ABT-869)",
"Masitinib (AB-1010)",
"MGCD-265",
"Midostaurin",
"MK-2206",
"MLN120B",
"Neratinib (HKI-272)",
"NF-kB Activation Inhibitor",
"Nutlin 3a",
"NVP-ADW742",
"NVP-TAE684",
"OTX-015",
"Panobinostat",
"PD173955",
"Pelitinib (EKB-569)",
"Perhexiline maleate",
"PH-797804",
"PHA-665752",
"PI-103",
"Ponatinib (AP24534)",
"PP242",
"PRT062607",
"Quizartinib (AC220)",
"RAF265 (CHIR-265)",
"Ralimetinib (LY2228820)",
"Ranolazine",
"Rapamycin",
"Regorafenib (BAY 73-4506)",
"S31-201",
"Selinexor",
"Selumetinib (AZD6244)",
"SNS-032 (BMS-387032)",
"Sorafenib",
"Sunitinib",
"Tivozanib (AV-951)",
"Tofacitinib (CP-690550)",
"Tozasertib (VX-680)",
"Trametinib (GSK1120212)",
"Vandetanib (ZD6474)",
"Vargetef",
"Vatalanib (PTK787)",
"Volasertib (BI-6727)",
"VX-745",
"Tanespimycin (17-AAG)")
Identity <- data.frame(row.names = rownames(RF_cluster_metadata))
Identity$RF_Cluster <- factor(RF_cluster_metadata$RF_Cluster_short,
levels=c('C1B',
'C1C',
'C1A',
'C2A',
'C2B'))
colors_annotation <-  list(RF_Cluster = c('C1A' = '#87551B',
'C1C' = '#E0B090',
'C1B' = '#C67942',
'C2A' = '#7CB7B0',
'C2B' = '#539690'))
row_anno <- rowAnnotation(df=Identity, col = colors_annotation,
gp = gpar(lwd =0.25, col = 'black'), simple_anno_size = unit(5, "mm"),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(RF_Cluster = list(direction = "vertical")))
breaks_val <- seq(from = 0, to = 1, length.out = 14)
col_heatmap_guide <- colorRamp2(breaks = breaks_val,colors = rev(c("#67000D",brew_mix)))
set.seed(1337)
dendro <- stats::hclust(dist(t(BeatAML_drug_response)), method = 'ward.D2') %>% as.dendrogram %>% ladderize
plot(dendro, axes=F)
par(lwd=3)
Hierchical_clusters_drugs <- sort(cutree(dendro, k = 3))
drug_df <- data.frame(row.names = names(Hierchical_clusters_drugs))
for (drug in rownames(drug_df)) {
drug_df[drug,'Hierarchical_cluster'] <- Hierchical_clusters_drugs[[drug]]
}
drug_df$Hierarchical_cluster <- factor(drug_df$Hierarchical_cluster, levels = c('1','2','3'))
HMap_BeatAMLdrugs <- Heatmap(BeatAML_drug_response[,rownames(drug_df)],
name = 'ssGSEA Score',
row_split = RF_cluster_metadata$RF_Cluster_short,
left_annotation  = row_anno,
column_split = drug_df$Hierarchical_cluster,
col = col_heatmap_guide,
rect_gp = gpar(col = "black", lwd = 0.05),
cluster_row_slices = F,
cluster_column_slices = F,
column_title_gp = gpar(fontsize=0, fontface='bold'),
row_names_gp = gpar(fontsize=9),
column_gap = unit(c(2.5,2.5), "mm"),
cluster_rows = T,
cluster_columns = T,
column_names_gp = gpar(fontsize=9),
show_heatmap_legend = F,
heatmap_legend_param = list(legend_direction = "horizontal",
legend_width = unit(5, "cm")),
row_names_side = 'right')
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
png(filename = paste(figures_folder, '/Fig_07/Panel_D.png', sep = ''), units = "cm", width = 30, height = 22, res = 300)
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
BeatAML_drug_response <- as.matrix(RF_cluster_metadata[,91:177])
colnames(BeatAML_drug_response) <- c(
"A-674563",
"ABT-737",
"Afatinib (BIBW-2992)",
"AT7519",
"Axitinib (AG-013736)",
"AZD1152-HQPA (AZD2811)",
"AZD1480",
"Bay 11-7085",
"BEZ235",
"Birinapant",
"Bortezomib (Velcade)",
"Bosutinib (SKI-606)",
"Cabozantinib",
"CI-1040 (PD184352)",
"Crenolanib",
"Crizotinib (PF-2341066)",
"CYT387",
"Dasatinib",
"Doramapimod (BIRB 796)",
"Dovitinib (CHIR-258)",
"Elesclomol",
"Entospletinib (GS-9973)",
"Entrectinib",
"Flavopiridol",
"Foretinib (XL880)",
"GDC-0941",
"Gilteritinib",
"GSK-1838705A",
"GW-2580",
"H-89",
"Ibrutinib (PCI-32765)",
"Idelalisib",
"Indisulam",
"INK-128",
"JAK Inhibitor I",
"JNJ-28312141",
"JNJ-38877605",
"JQ1",
"KI20227",
"KU-55933",
"KW-2449",
"Lenalidomide",
"Lenvatinib",
"Linifanib (ABT-869)",
"Masitinib (AB-1010)",
"MGCD-265",
"Midostaurin",
"MK-2206",
"MLN120B",
"Neratinib (HKI-272)",
"NF-kB Activation Inhibitor",
"Nutlin 3a",
"NVP-ADW742",
"NVP-TAE684",
"OTX-015",
"Panobinostat",
"PD173955",
"Pelitinib (EKB-569)",
"Perhexiline maleate",
"PH-797804",
"PHA-665752",
"PI-103",
"Ponatinib (AP24534)",
"PP242",
"PRT062607",
"Quizartinib (AC220)",
"RAF265 (CHIR-265)",
"Ralimetinib (LY2228820)",
"Ranolazine",
"Rapamycin",
"Regorafenib (BAY 73-4506)",
"S31-201",
"Selinexor",
"Selumetinib (AZD6244)",
"SNS-032 (BMS-387032)",
"Sorafenib",
"Sunitinib",
"Tivozanib (AV-951)",
"Tofacitinib (CP-690550)",
"Tozasertib (VX-680)",
"Trametinib (GSK1120212)",
"Vandetanib (ZD6474)",
"Vargetef",
"Vatalanib (PTK787)",
"Volasertib (BI-6727)",
"VX-745",
"Tanespimycin (17-AAG)")
Identity <- data.frame(row.names = rownames(RF_cluster_metadata))
Identity$RF_Cluster <- factor(RF_cluster_metadata$RF_Cluster_short,
levels=c('C1B',
'C1C',
'C1A',
'C2A',
'C2B'))
colors_annotation <-  list(RF_Cluster = c('C1A' = '#87551B',
'C1C' = '#E0B090',
'C1B' = '#C67942',
'C2A' = '#7CB7B0',
'C2B' = '#539690'))
row_anno <- rowAnnotation(df=Identity, col = colors_annotation,
gp = gpar(lwd =0.25, col = 'black'), simple_anno_size = unit(5, "mm"),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(RF_Cluster = list(direction = "vertical")))
breaks_val <- seq(from = 0, to = 1, length.out = 14)
col_heatmap_guide <- colorRamp2(breaks = breaks_val,colors = rev(c("#67000D",brew_mix)))
set.seed(1337)
dendro <- stats::hclust(dist(t(BeatAML_drug_response)), method = 'ward.D') %>% as.dendrogram %>% ladderize
plot(dendro, axes=F)
par(lwd=3)
Hierchical_clusters_drugs <- sort(cutree(dendro, k = 3))
drug_df <- data.frame(row.names = names(Hierchical_clusters_drugs))
for (drug in rownames(drug_df)) {
drug_df[drug,'Hierarchical_cluster'] <- Hierchical_clusters_drugs[[drug]]
}
drug_df$Hierarchical_cluster <- factor(drug_df$Hierarchical_cluster, levels = c('1','2','3'))
HMap_BeatAMLdrugs <- Heatmap(BeatAML_drug_response[,rownames(drug_df)],
name = 'ssGSEA Score',
row_split = RF_cluster_metadata$RF_Cluster_short,
left_annotation  = row_anno,
column_split = drug_df$Hierarchical_cluster,
col = col_heatmap_guide,
rect_gp = gpar(col = "black", lwd = 0.05),
cluster_row_slices = F,
cluster_column_slices = F,
column_title_gp = gpar(fontsize=0, fontface='bold'),
row_names_gp = gpar(fontsize=9),
column_gap = unit(c(2.5,2.5), "mm"),
cluster_rows = T,
cluster_columns = T,
column_names_gp = gpar(fontsize=9),
show_heatmap_legend = F,
heatmap_legend_param = list(legend_direction = "horizontal",
legend_width = unit(5, "cm")),
row_names_side = 'right')
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
png(filename = paste(figures_folder, '/Fig_07/Panel_D.png', sep = ''), units = "cm", width = 30, height = 22, res = 300)
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
Drug_families <- read.csv(paste(data_folder, '/RNASeq/PubliclyAvailable/2022__Vizome__BeatAML/Metadata/Drug_families.txt', sep = ''),
sep = '\t')
Drug_families <- Drug_families %>% filter(inhibitor %in% colnames(BeatAML_drug_response))
Unique_families <- levels(factor(Drug_families$family))[grep(TRUE,table(Drug_families$family) > 1)]
Unique_families_df <- data.frame(row.names = Unique_families)
Drug_families_short_names <- read.csv(paste(data_folder, '/RNASeq/PubliclyAvailable/2022__Vizome__BeatAML/Metadata/Drug_families_short_names.txt',
sep = ''),
sep = '\t')
for (unique_family in Unique_families) {
Unique_families_df[unique_family,'Short_name'] <- (Drug_families_short_names %>% filter(family == unique_family))$synonym
}
family_sensitivity_score <- data.frame(row.names = rownames(BeatAML_drug_response))
for (unique_family in Unique_families) {
family_sensitivity_score[,Unique_families_df[unique_family,'Short_name']] <- matrixStats::rowMedians(BeatAML_drug_response[,(Drug_families %>% filter(family == unique_family))$inhibitor])
}
Identity <- data.frame(row.names = rownames(RF_cluster_metadata))
Identity$RF_Cluster <- factor(RF_cluster_metadata$RF_Cluster_short,
levels=c('C1A',
'C1C',
'C1B',
'C2A',
'C2B'))
colors_annotation <-  list(RF_Cluster = c('C1A' = '#87551B',
'C1C' = '#E0B090',
'C1B' = '#C67942',
'C2A' = '#7CB7B0',
'C2B' = '#539690'))
row_anno <- rowAnnotation(df=Identity, col = colors_annotation,
gp = gpar(lwd =0.25, col = 'black'), simple_anno_size = unit(5, "mm"),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(RF_Cluster = list(direction = "vertical")))
breaks_val <- seq(from = 0, to = 1, length.out = 14)
col_heatmap_guide <- colorRamp2(breaks = breaks_val,colors = rev(c("#67000D",brew_mix)))
dendro <- stats::hclust(dist(t(family_sensitivity_score)), method = 'ward.D') %>% as.dendrogram %>% ladderize
plot(dendro, axes=F)
par(lwd=3)
Hierchical_clusters_drugs <- sort(cutree(dendro, k = 3))
drug_family_df <- data.frame(row.names = names(Hierchical_clusters_drugs))
for (drug_family in rownames(drug_family_df)) {
drug_family_df[drug_family,'Hierarchical_cluster'] <- Hierchical_clusters_drugs[[drug_family]]
}
drug_family_df$Hierarchical_cluster <- factor(drug_family_df$Hierarchical_cluster, levels = c('3','1','2'))
HMap_BeatAMLdrugs <- Heatmap(family_sensitivity_score[,rownames(drug_family_df)],
name = 'ssGSEA Score',
row_split = RF_cluster_metadata$RF_Cluster_short,
left_annotation  = row_anno,
column_split = drug_family_df$Hierarchical_cluster,
col = col_heatmap_guide,
rect_gp = gpar(col = "black", lwd = 0.05),
cluster_row_slices = F,
cluster_column_slices = F,
column_title_gp = gpar(fontsize=0, fontface='bold'),
row_names_gp = gpar(fontsize=9),
column_gap = unit(c(2.5,2.5), "mm"),
cluster_rows = T,
cluster_columns = T,
column_names_gp = gpar(fontsize=9),
show_heatmap_legend = F,
heatmap_legend_param = list(legend_direction = "horizontal",
legend_width = unit(5, "cm")),
row_names_side = 'right')
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
png(filename = paste(figures_folder, '/Fig_07/Panel_E.png', sep = ''), units = "cm", width = 24, height = 24, res = 300)
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
Drug_families <- read.csv(paste(data_folder, '/RNASeq/PubliclyAvailable/2022__Vizome__BeatAML/Metadata/Drug_families.txt', sep = ''),
sep = '\t')
Drug_families <- Drug_families %>% filter(inhibitor %in% colnames(BeatAML_drug_response))
Unique_families <- levels(factor(Drug_families$family))[grep(TRUE,table(Drug_families$family) > 1)]
Unique_families_df <- data.frame(row.names = Unique_families)
Drug_families_short_names <- read.csv(paste(data_folder, '/RNASeq/PubliclyAvailable/2022__Vizome__BeatAML/Metadata/Drug_families_short_names.txt',
sep = ''),
sep = '\t')
for (unique_family in Unique_families) {
Unique_families_df[unique_family,'Short_name'] <- (Drug_families_short_names %>% filter(family == unique_family))$synonym
}
family_sensitivity_score <- data.frame(row.names = rownames(BeatAML_drug_response))
for (unique_family in Unique_families) {
family_sensitivity_score[,Unique_families_df[unique_family,'Short_name']] <- matrixStats::rowMedians(BeatAML_drug_response[,(Drug_families %>% filter(family == unique_family))$inhibitor])
}
Identity <- data.frame(row.names = rownames(RF_cluster_metadata))
Identity$RF_Cluster <- factor(RF_cluster_metadata$RF_Cluster_short,
levels=c('C1A',
'C1C',
'C1B',
'C2A',
'C2B'))
colors_annotation <-  list(RF_Cluster = c('C1A' = '#87551B',
'C1C' = '#E0B090',
'C1B' = '#C67942',
'C2A' = '#7CB7B0',
'C2B' = '#539690'))
row_anno <- rowAnnotation(df=Identity, col = colors_annotation,
gp = gpar(lwd =0.25, col = 'black'), simple_anno_size = unit(5, "mm"),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(RF_Cluster = list(direction = "vertical")))
breaks_val <- seq(from = 0, to = 1, length.out = 14)
col_heatmap_guide <- colorRamp2(breaks = breaks_val,colors = rev(c("#67000D",brew_mix)))
dendro <- stats::hclust(dist(t(family_sensitivity_score)), method = 'ward.D2') %>% as.dendrogram %>% ladderize
plot(dendro, axes=F)
par(lwd=3)
Hierchical_clusters_drugs <- sort(cutree(dendro, k = 3))
drug_family_df <- data.frame(row.names = names(Hierchical_clusters_drugs))
for (drug_family in rownames(drug_family_df)) {
drug_family_df[drug_family,'Hierarchical_cluster'] <- Hierchical_clusters_drugs[[drug_family]]
}
drug_family_df$Hierarchical_cluster <- factor(drug_family_df$Hierarchical_cluster, levels = c('3','1','2'))
HMap_BeatAMLdrugs <- Heatmap(family_sensitivity_score[,rownames(drug_family_df)],
name = 'ssGSEA Score',
row_split = RF_cluster_metadata$RF_Cluster_short,
left_annotation  = row_anno,
column_split = drug_family_df$Hierarchical_cluster,
col = col_heatmap_guide,
rect_gp = gpar(col = "black", lwd = 0.05),
cluster_row_slices = F,
cluster_column_slices = F,
column_title_gp = gpar(fontsize=0, fontface='bold'),
row_names_gp = gpar(fontsize=9),
column_gap = unit(c(2.5,2.5), "mm"),
cluster_rows = T,
cluster_columns = T,
column_names_gp = gpar(fontsize=9),
show_heatmap_legend = F,
heatmap_legend_param = list(legend_direction = "horizontal",
legend_width = unit(5, "cm")),
row_names_side = 'right')
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
png(filename = paste(figures_folder, '/Fig_07/Panel_E.png', sep = ''), units = "cm", width = 24, height = 24, res = 300)
draw(HMap_BeatAMLdrugs, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
# Get the path of the current script
# Then get the parent directory of the parent directory of the parent directory
local_wd_folder <- dirname(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Set the root directory for knitr to the local working directory
knitr::opts_knit$set(root.dir = local_wd_folder)
# Get the directory of the current script
script_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
# Define the data folder and output folder
data_folder <- './Data'
#results_folder <- './Results'
figures_folder <- './Figures'
# Set a seed for reproducibility
set.seed(123)
# Ensure BiocManager is available for installation of Bioconductor packages
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(version = "3.18", ask = FALSE)
# Define a list of required packages used in this script
packages_required <- c("ggplot2", "dplyr", "fgsea",
"unikn", "RColorBrewer", "yarrr", "scales", "ggsci")
# Identify any required packages that are not installed
packages_uninstalled <- packages_required[!(packages_required %in% installed.packages()[,"Package"])]
# Install any uninstalled packages
if(length(packages_uninstalled)) BiocManager::install(packages_uninstalled, ask = FALSE)
library(fgsea, quietly = TRUE)
library(stringr, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# Write the session information to a text file
writeLines(capture.output(sessionInfo()), file.path(script_folder, 'Fig_02_GH_SessionInfo.txt'))
# Print the session information
sessionInfo()
Expression_matrix <- read.csv(paste(data_folder, '/RNASeq/InHouse/Counts/Processed_counts/Grouped/Tximport_TPM_mat.csv',
sep = ''),
row.names = 'X')
# Get the path of the current script
# Then get the parent directory of the parent directory of the parent directory
local_wd_folder <- dirname(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Set the root directory for knitr to the local working directory
knitr::opts_knit$set(root.dir = local_wd_folder)
# Get the directory of the current script
script_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
# Define the data folder and output folder
data_folder <- './Data'
#results_folder <- './Results'
figures_folder <- './Figures'
# Set a seed for reproducibility
set.seed(123)
# Ensure BiocManager is available for installation of Bioconductor packages
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(version = "3.18", ask = FALSE)
