'BP-CMML',
'AML: CEBPA',
'AML: MDS-cyto',
'AML: MDS-mut',
'AML: NPM1',
'AML: NOS',
'BPDCN')
colnames(traitMEPval_Renamed)[39:42] <- c('DTA group',
'Splicing group',
'RAS group',
'IDH group')
metadata_df <- data.frame(row.names = colnames(traitMECor_Renamed))
metadata_df$Metadata <- colnames(traitMECor_Renamed)
metadata_df$Class <- 'Mutation'
metadata_df[1:2,'Class'] <- 'Condition'
metadata_df[3:8,'Class'] <- 'ICC'
metadata_df[39:42,'Class'] <- 'Grouped Mutations'
metadata_df$Class <- factor(metadata_df$Class, levels = c('Condition',
'ICC',
'Grouped Mutations',
'Mutation'))
ra <- rowAnnotation(df=ME_color_number_df, col = ME_color_annotation,
gp = gpar(lwd =0.5, col = 'black'),
simple_anno_size = unit(2, 'mm'),
show_annotation_name = F, show_legend = FALSE,
annotation_legend_param = list(number = list(direction = "horizontal")))
traitMECor_Renamed <- traitMECor_Renamed[c('ME6','ME5','ME4',
'ME3','ME2','ME1'),]
traitMEPval_Renamed <- traitMEPval_Renamed[c('ME6','ME5','ME4',
'ME3','ME2','ME1'),]
ht_opt$COLUMN_ANNO_PADDING = unit(4, "mm")
ht_opt$ROW_ANNO_PADDING = unit(2.5, "mm")
###
Heatmap_trait_cor <- Heatmap(traitMECor_Renamed, name = 'Pearson\nCor.',
col = col_heatmap_guide,
cell_fun = function(j, i, x, y, w, h, fill) {
if(traitMEPval_Renamed[i, j] < 0.001) {
grid.text("*", x, y, vjust = 0.65, gp = gpar(fontsize = 18))
} else if(traitMEPval_Renamed[i, j] < 0.05) {
grid.text("â€¢", x, y, vjust = 0.2, gp = gpar(fontsize = 13))
}},
left_annotation = ra,
show_row_names = TRUE,
show_column_names = TRUE,
cluster_columns = F,
cluster_rows = F,
border = TRUE,
column_split = metadata_df$Class,
column_gap = unit(c(2.5,2.5,2.5), "mm"),
cluster_row_slices = F,
cluster_column_slices = F,
row_gap = unit(0.05, 'cm'),
show_row_dend = FALSE,
row_names_side = 'left',
column_names_side = 'bottom',
use_raster = TRUE,
rect_gp = gpar(col = "black", lwd = 0.05),
raster_by_magick = TRUE,
column_title_gp = gpar(fontsize = 0, angle=45),
column_names_gp = gpar(fontsize = 9, hjust=0),
row_title_gp = gpar(fontsize = 0),
row_names_gp = gpar(fontsize = 9, hjust=0),
show_heatmap_legend = T,
heatmap_legend_param = list(
legend_direction = "horizontal",
legend_width = unit(3, "cm")))
#Heatmap_trait_cor
# Open a new PNG device for plotting
png(filename = paste(figures_folder, '/Fig_03/Panel_C.png', sep = ''), width = 22, height = 10, units = 'cm', res = 300)
draw(Heatmap_trait_cor, heatmap_legend_side = "bottom",
annotation_legend_side = "bottom")
invisible(dev.off())
-3*log(1)
-2*log(1)
log(0.1)
log(0.01)
log10(0.01)
log10(0.001)
# Get the path of the current script
# Then get the parent directory of the parent directory of the parent directory
local_wd_folder <- dirname(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Set the root directory for knitr to the local working directory
knitr::opts_knit$set(root.dir = local_wd_folder)
# Get the directory of the current script
script_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
# Define the data folder and output folder
data_folder <- './Data'
#results_folder <- './Results'
figures_folder <- './Figures'
dir.create(paste(data_folder, '/RNASeq/InHouse/Pathway_Analysis/Pathway_Correlations', sep = ''),
showWarnings = F)
# Set a seed for reproducibility
set.seed(123)
# Ensure BiocManager is available for installation of Bioconductor packages
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
#BiocManager::install(version = "3.18")
# Define a list of required packages used in this script
packages_required <- c("ggplot2", "dplyr", "smplot2", "WGCNA")
# Identify any required packages that are not installed
packages_uninstalled <- packages_required[!(packages_required %in% installed.packages()[,"Package"])]
# Install any uninstalled packages
if(length(packages_uninstalled)) BiocManager::install(packages_uninstalled)
library(ggplot2, quietly = TRUE)
library(smplot2, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(WGCNA, quietly = TRUE)
# Load additional colour palette packages
library(unikn, quietly = TRUE)
library(RColorBrewer, quietly = TRUE)
library(yarrr, quietly = TRUE)
library(scales, quietly = TRUE)
library(ggsci, quietly = TRUE)
# Define a set of custom color palettes from the unikn package
mix_1 <- usecol(pal = c(Karpfenblau, "white", Peach), n = 15)
mix_2 <- usecol(pal = c(rev(pal_seeblau), "white", pal_pinky))
mix_3 <- usecol(pal = c(rev(pal_bordeaux), "white", pal_petrol), n = 15)
# Display the custom palettes
seecol(list(mix_1, mix_2, mix_3), col_brd = "white", lwd_brd = 4, title = "Comparing palettes mixed from unikn colors", pal_names = c("mix_1", "mix_2", "mix_3"))
# Define a second set of custom palettes from the RColorBrewer and yarrr packages
brew_mix <- usecol(c(rev(brewer.pal(n = 4, name = "Reds")), "white", brewer.pal(n = 4, name = "Blues")), n = 13)
brew_ext <- usecol(brewer.pal(n = 11, name = "Spectral"), n = 12)
yarrr_mix <- usecol(c(piratepal("nemo"), piratepal("bugs")))
yarrr_mod <- usecol(c(piratepal("ipod")), n = 9)
# Display the second set of custom palettes
seecol(pal = list(brew_mix, brew_ext, yarrr_mix, yarrr_mod), col_brd = "white", lwd_brd = 2, title = "Using usecol() and seecol() to mix and modify palettes", pal_names = c("brew_mix", "brew_ext", "yarrr_mix", "yarrr_mod"))
# Define additional custom palettes from the scales package
natjournals_palette <- pal_npg("nrc")(10)
# Write the session information to a text file
writeLines(capture.output(sessionInfo()), file.path(script_folder, 'Fig_06_CDE_SessionInfo.txt'))
# Print the session information
sessionInfo()
RF_cluster_metadata <- read.csv(paste(data_folder, '/RandomForest/Results/Clustering/K2/RF_K2_Clustered_Metadata.csv',
sep = ''), row.names = 'Patient.ID')
WGCNA_score <- RF_cluster_metadata %>% select(ME1, ME2, ME3, ME4, ME5, ME6)
Common_drugs_response <- RF_cluster_metadata %>% select(AZA.resistance, Cytarabine.response,
Daunorubicin.resistance, Venetoclax.resistance)
colnames(Common_drugs_response) <- c('Azacitidine resistance',
'Cytarabine response',
'Daunorubicin resistance',
'Venetoclax resistance')
Cor_df <- cbind(WGCNA_score, Common_drugs_response)
model_matrix_C1 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C1')))
model_matrix_C2 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C2')))
colnames(model_matrix_C1) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
colnames(model_matrix_C2) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
#
Cor_modules_C1 <- WGCNA::cor(model_matrix_C1, Cor_df[grep(TRUE, RF_cluster_metadata$RF_Cluster == 'C1'),7:10], use = "p")
Cor_modules_stat_C1 <- WGCNA::corPvalueStudent(Cor_modules_C1, nrow(model_matrix_C1))
Cor_modules_stat_C1_rank <- as.data.frame(sign(Cor_modules_C1)*(-1*log10(Cor_modules_stat_C1)))
Cor_modules_stat_C1_rank$Mutation <- rownames(Cor_modules_stat_C1_rank)
Cor_modules_stat_C1_rank_ggplot_df <- pivot_longer(as.data.frame(Cor_modules_stat_C1_rank), cols = c('Azacitidine resistance', `Cytarabine response`, `Daunorubicin resistance`, `Venetoclax resistance`))
# Get the path of the current script
# Then get the parent directory of the parent directory of the parent directory
local_wd_folder <- dirname(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Set the root directory for knitr to the local working directory
knitr::opts_knit$set(root.dir = local_wd_folder)
# Get the directory of the current script
script_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
# Define the data folder and output folder
data_folder <- './Data'
#results_folder <- './Results'
figures_folder <- './Figures'
dir.create(paste(data_folder, '/RNASeq/InHouse/Pathway_Analysis/Pathway_Correlations', sep = ''),
showWarnings = F)
# Set a seed for reproducibility
set.seed(123)
# Ensure BiocManager is available for installation of Bioconductor packages
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
#BiocManager::install(version = "3.18")
# Define a list of required packages used in this script
packages_required <- c("ggplot2", "dplyr", "smplot2", "WGCNA", "tidyr")
# Identify any required packages that are not installed
packages_uninstalled <- packages_required[!(packages_required %in% installed.packages()[,"Package"])]
# Install any uninstalled packages
if(length(packages_uninstalled)) BiocManager::install(packages_uninstalled)
library(ggplot2, quietly = TRUE)
library(smplot2, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(WGCNA, quietly = TRUE)
library(tidyr, quietly = TRUE)
# Load additional colour palette packages
library(unikn, quietly = TRUE)
library(RColorBrewer, quietly = TRUE)
library(yarrr, quietly = TRUE)
library(scales, quietly = TRUE)
library(ggsci, quietly = TRUE)
# Define a set of custom color palettes from the unikn package
mix_1 <- usecol(pal = c(Karpfenblau, "white", Peach), n = 15)
mix_2 <- usecol(pal = c(rev(pal_seeblau), "white", pal_pinky))
mix_3 <- usecol(pal = c(rev(pal_bordeaux), "white", pal_petrol), n = 15)
# Display the custom palettes
seecol(list(mix_1, mix_2, mix_3), col_brd = "white", lwd_brd = 4, title = "Comparing palettes mixed from unikn colors", pal_names = c("mix_1", "mix_2", "mix_3"))
# Define a second set of custom palettes from the RColorBrewer and yarrr packages
brew_mix <- usecol(c(rev(brewer.pal(n = 4, name = "Reds")), "white", brewer.pal(n = 4, name = "Blues")), n = 13)
brew_ext <- usecol(brewer.pal(n = 11, name = "Spectral"), n = 12)
yarrr_mix <- usecol(c(piratepal("nemo"), piratepal("bugs")))
yarrr_mod <- usecol(c(piratepal("ipod")), n = 9)
# Display the second set of custom palettes
seecol(pal = list(brew_mix, brew_ext, yarrr_mix, yarrr_mod), col_brd = "white", lwd_brd = 2, title = "Using usecol() and seecol() to mix and modify palettes", pal_names = c("brew_mix", "brew_ext", "yarrr_mix", "yarrr_mod"))
# Define additional custom palettes from the scales package
natjournals_palette <- pal_npg("nrc")(10)
# Write the session information to a text file
writeLines(capture.output(sessionInfo()), file.path(script_folder, 'Fig_06_CDE_SessionInfo.txt'))
# Print the session information
sessionInfo()
RF_cluster_metadata <- read.csv(paste(data_folder, '/RandomForest/Results/Clustering/K2/RF_K2_Clustered_Metadata.csv',
sep = ''), row.names = 'Patient.ID')
WGCNA_score <- RF_cluster_metadata %>% select(ME1, ME2, ME3, ME4, ME5, ME6)
Common_drugs_response <- RF_cluster_metadata %>% select(AZA.resistance, Cytarabine.response,
Daunorubicin.resistance, Venetoclax.resistance)
colnames(Common_drugs_response) <- c('Azacitidine resistance',
'Cytarabine response',
'Daunorubicin resistance',
'Venetoclax resistance')
Cor_df <- cbind(WGCNA_score, Common_drugs_response)
model_matrix_C1 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C1')))
model_matrix_C2 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C2')))
colnames(model_matrix_C1) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
colnames(model_matrix_C2) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
#
Cor_modules_C1 <- WGCNA::cor(model_matrix_C1, Cor_df[grep(TRUE, RF_cluster_metadata$RF_Cluster == 'C1'),7:10], use = "p")
Cor_modules_stat_C1 <- WGCNA::corPvalueStudent(Cor_modules_C1, nrow(model_matrix_C1))
Cor_modules_stat_C1_rank <- as.data.frame(sign(Cor_modules_C1)*(-1*log10(Cor_modules_stat_C1)))
Cor_modules_stat_C1_rank$Mutation <- rownames(Cor_modules_stat_C1_rank)
Cor_modules_stat_C1_rank_ggplot_df <- pivot_longer(as.data.frame(Cor_modules_stat_C1_rank), cols = c('Azacitidine resistance', `Cytarabine response`, `Daunorubicin resistance`, `Venetoclax resistance`))
Cor_modules_stat_C1_rank_ggplot_df$value_to_colour <- Cor_modules_stat_C1_rank_ggplot_df$value
Cor_modules_stat_C1_rank_ggplot_df[grep(TRUE,Cor_modules_stat_C1_rank_ggplot_df$value_to_colour < 1.30103 & Cor_modules_stat_C1_rank_ggplot_df$value_to_colour > -1.30103),'value_to_colour'] <- NA
#
Cor_modules_C2 <- WGCNA::cor(model_matrix_C2, Cor_df[grep(TRUE, RF_cluster_metadata$RF_Cluster == 'C2'),7:10], use = "p")
Cor_modules_stat_C2 <- WGCNA::corPvalueStudent(Cor_modules_C2, nrow(model_matrix_C2))
Cor_modules_stat_C2_rank <- as.data.frame(sign(Cor_modules_C2)*(-1*log10(Cor_modules_stat_C2)))
Cor_modules_stat_C2_rank$Mutation <- rownames(Cor_modules_stat_C2_rank)
Cor_modules_stat_C2_rank_ggplot_df <- pivot_longer(as.data.frame(Cor_modules_stat_C2_rank), cols = c('Azacitidine resistance', `Cytarabine response`, `Daunorubicin resistance`, `Venetoclax resistance`))
Cor_modules_stat_C2_rank_ggplot_df$value_to_colour <- Cor_modules_stat_C2_rank_ggplot_df$value
Cor_modules_stat_C2_rank_ggplot_df[grep(TRUE,Cor_modules_stat_C2_rank_ggplot_df$value_to_colour < 1.30103 & Cor_modules_stat_C2_rank_ggplot_df$value_to_colour > -1.30103),'value_to_colour'] <- NA
### - C1: Immature
plot <- ggplot(data = Cor_modules_stat_C1_rank_ggplot_df, aes(x=value, y = name,
colour = value_to_colour)) +
geom_point(size=3, stroke=0.2) +
geom_vline(xintercept = 1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
geom_vline(xintercept = -1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
theme_light(base_rect_size = 0) +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "gray22", size = 0.35),
panel.grid.major.x = element_line(color = "gray60", size = 0),
panel.grid.minor.x = element_line(color = "gray60", size = 0),
axis.text.y = element_text(size = 12, face= 'bold'),
axis.title.x = element_text(size = 12, face= 'bold', hjust = 0.5),
plot.title = element_text(size = 14, face= 'bold', hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5), ) +
xlab(bquote(~Sign. -Log[10]~ '(P.Value)')) + ylab('') +
ggtitle(label = 'Genotype to drug response cor.', subtitle = 'C1: Immature') +
geom_text_repel(aes(label = ifelse(value > 1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.05,
nudge_y = 0.35,
segment.size = 0.5,
direction = 'x') +
geom_text_repel(aes(label = ifelse(value < -1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.15,
nudge_y = -0.25,
segment.size = 1,
direction = 'x') +
scale_colour_gradient(low = '#2171B5', high = '#CB181D', na.value = ggplot2::alpha('grey72', 1)) +
scale_y_discrete(position = "right")
# Get the path of the current script
# Then get the parent directory of the parent directory of the parent directory
local_wd_folder <- dirname(dirname(dirname(rstudioapi::getSourceEditorContext()$path)))
# Set the root directory for knitr to the local working directory
knitr::opts_knit$set(root.dir = local_wd_folder)
# Get the directory of the current script
script_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
# Define the data folder and output folder
data_folder <- './Data'
#results_folder <- './Results'
figures_folder <- './Figures'
dir.create(paste(data_folder, '/RNASeq/InHouse/Pathway_Analysis/Pathway_Correlations', sep = ''),
showWarnings = F)
# Set a seed for reproducibility
set.seed(123)
# Ensure BiocManager is available for installation of Bioconductor packages
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
#BiocManager::install(version = "3.18")
# Define a list of required packages used in this script
packages_required <- c("ggplot2", "dplyr", "smplot2", "WGCNA", "tidyr",
"ggrepel")
# Identify any required packages that are not installed
packages_uninstalled <- packages_required[!(packages_required %in% installed.packages()[,"Package"])]
# Install any uninstalled packages
if(length(packages_uninstalled)) BiocManager::install(packages_uninstalled)
library(ggplot2, quietly = TRUE)
library(ggrepel, quietly = TRUE)
library(smplot2, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(WGCNA, quietly = TRUE)
library(tidyr, quietly = TRUE)
# Load additional colour palette packages
library(unikn, quietly = TRUE)
library(RColorBrewer, quietly = TRUE)
library(yarrr, quietly = TRUE)
library(scales, quietly = TRUE)
library(ggsci, quietly = TRUE)
# Define a set of custom color palettes from the unikn package
mix_1 <- usecol(pal = c(Karpfenblau, "white", Peach), n = 15)
mix_2 <- usecol(pal = c(rev(pal_seeblau), "white", pal_pinky))
mix_3 <- usecol(pal = c(rev(pal_bordeaux), "white", pal_petrol), n = 15)
# Display the custom palettes
seecol(list(mix_1, mix_2, mix_3), col_brd = "white", lwd_brd = 4, title = "Comparing palettes mixed from unikn colors", pal_names = c("mix_1", "mix_2", "mix_3"))
# Define a second set of custom palettes from the RColorBrewer and yarrr packages
brew_mix <- usecol(c(rev(brewer.pal(n = 4, name = "Reds")), "white", brewer.pal(n = 4, name = "Blues")), n = 13)
brew_ext <- usecol(brewer.pal(n = 11, name = "Spectral"), n = 12)
yarrr_mix <- usecol(c(piratepal("nemo"), piratepal("bugs")))
yarrr_mod <- usecol(c(piratepal("ipod")), n = 9)
# Display the second set of custom palettes
seecol(pal = list(brew_mix, brew_ext, yarrr_mix, yarrr_mod), col_brd = "white", lwd_brd = 2, title = "Using usecol() and seecol() to mix and modify palettes", pal_names = c("brew_mix", "brew_ext", "yarrr_mix", "yarrr_mod"))
# Define additional custom palettes from the scales package
natjournals_palette <- pal_npg("nrc")(10)
# Write the session information to a text file
writeLines(capture.output(sessionInfo()), file.path(script_folder, 'Fig_06_CDE_SessionInfo.txt'))
# Print the session information
sessionInfo()
RF_cluster_metadata <- read.csv(paste(data_folder, '/RandomForest/Results/Clustering/K2/RF_K2_Clustered_Metadata.csv',
sep = ''), row.names = 'Patient.ID')
WGCNA_score <- RF_cluster_metadata %>% select(ME1, ME2, ME3, ME4, ME5, ME6)
Common_drugs_response <- RF_cluster_metadata %>% select(AZA.resistance, Cytarabine.response,
Daunorubicin.resistance, Venetoclax.resistance)
colnames(Common_drugs_response) <- c('Azacitidine resistance',
'Cytarabine response',
'Daunorubicin resistance',
'Venetoclax resistance')
Cor_df <- cbind(WGCNA_score, Common_drugs_response)
model_matrix_C1 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C1')))
model_matrix_C2 <- as.data.frame(model.matrix( ~ DNMT3A + TET2 + SRSF2 + SF3B1 + SETBP1 + U2AF1 + IDH1 + IDH2 + ASXL1 + EZH2 + STAG2 + BCOR + TP53 + PHF6 + NF1 + RUNX1 + FLT3 + NPM1 + CEBPA + WT1 + KIT + BRAF + KRAS + NRAS + CBL + PTPN11 + GATA2 + SH2B3 + ZRSR2 + CSF3R + DTA.mutations..DNMT3A..TET2..ASXL1. +Splicing.mutations..U2...SRSF2..SF3B1..U2AF1..ZRSF2. +RAS.mutations..NRAS..KRAS..CBL..NF1..PTPN11..BRAF. + IDH.mutations..IDH1..IDH2. - 1 , data = RF_cluster_metadata %>% filter(RF_Cluster == 'C2')))
colnames(model_matrix_C1) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
colnames(model_matrix_C2) <- c(colnames(model_matrix_C1[,1:30]), 'DTA.mut.', 'Splicing.mut.', 'RAS.mut.', 'IDH.mut.')
#
Cor_modules_C1 <- WGCNA::cor(model_matrix_C1, Cor_df[grep(TRUE, RF_cluster_metadata$RF_Cluster == 'C1'),7:10], use = "p")
Cor_modules_stat_C1 <- WGCNA::corPvalueStudent(Cor_modules_C1, nrow(model_matrix_C1))
Cor_modules_stat_C1_rank <- as.data.frame(sign(Cor_modules_C1)*(-1*log10(Cor_modules_stat_C1)))
Cor_modules_stat_C1_rank$Mutation <- rownames(Cor_modules_stat_C1_rank)
Cor_modules_stat_C1_rank_ggplot_df <- pivot_longer(as.data.frame(Cor_modules_stat_C1_rank), cols = c('Azacitidine resistance', `Cytarabine response`, `Daunorubicin resistance`, `Venetoclax resistance`))
Cor_modules_stat_C1_rank_ggplot_df$value_to_colour <- Cor_modules_stat_C1_rank_ggplot_df$value
Cor_modules_stat_C1_rank_ggplot_df[grep(TRUE,Cor_modules_stat_C1_rank_ggplot_df$value_to_colour < 1.30103 & Cor_modules_stat_C1_rank_ggplot_df$value_to_colour > -1.30103),'value_to_colour'] <- NA
#
Cor_modules_C2 <- WGCNA::cor(model_matrix_C2, Cor_df[grep(TRUE, RF_cluster_metadata$RF_Cluster == 'C2'),7:10], use = "p")
Cor_modules_stat_C2 <- WGCNA::corPvalueStudent(Cor_modules_C2, nrow(model_matrix_C2))
Cor_modules_stat_C2_rank <- as.data.frame(sign(Cor_modules_C2)*(-1*log10(Cor_modules_stat_C2)))
Cor_modules_stat_C2_rank$Mutation <- rownames(Cor_modules_stat_C2_rank)
Cor_modules_stat_C2_rank_ggplot_df <- pivot_longer(as.data.frame(Cor_modules_stat_C2_rank), cols = c('Azacitidine resistance', `Cytarabine response`, `Daunorubicin resistance`, `Venetoclax resistance`))
Cor_modules_stat_C2_rank_ggplot_df$value_to_colour <- Cor_modules_stat_C2_rank_ggplot_df$value
Cor_modules_stat_C2_rank_ggplot_df[grep(TRUE,Cor_modules_stat_C2_rank_ggplot_df$value_to_colour < 1.30103 & Cor_modules_stat_C2_rank_ggplot_df$value_to_colour > -1.30103),'value_to_colour'] <- NA
### - C1: Immature
plot <- ggplot(data = Cor_modules_stat_C1_rank_ggplot_df, aes(x=value, y = name,
colour = value_to_colour)) +
geom_point(size=3, stroke=0.2) +
geom_vline(xintercept = 1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
geom_vline(xintercept = -1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
theme_light(base_rect_size = 0) +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "gray22", size = 0.35),
panel.grid.major.x = element_line(color = "gray60", size = 0),
panel.grid.minor.x = element_line(color = "gray60", size = 0),
axis.text.y = element_text(size = 12, face= 'bold'),
axis.title.x = element_text(size = 12, face= 'bold', hjust = 0.5),
plot.title = element_text(size = 14, face= 'bold', hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5), ) +
xlab(bquote(~Sign. -Log[10]~ '(P.Value)')) + ylab('') +
ggtitle(label = 'Genotype to drug response cor.', subtitle = 'C1: Immature') +
geom_text_repel(aes(label = ifelse(value > 1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.05,
nudge_y = 0.35,
segment.size = 0.5,
direction = 'x') +
geom_text_repel(aes(label = ifelse(value < -1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.15,
nudge_y = -0.25,
segment.size = 1,
direction = 'x') +
scale_colour_gradient(low = '#2171B5', high = '#CB181D', na.value = ggplot2::alpha('grey72', 1)) +
scale_y_discrete(position = "right")
print(plot)
png(filename = paste(figures_folder, '/Fig_06/Panel_E-1.png', sep = ''), units = "px", width = 1876.2, height = 900, res = 300)
print(plot)
invisible(dev.off())
### - C2: Mature
plot <- ggplot(data = Cor_modules_stat_C2_rank_ggplot_df, aes(x=value, y = name,
colour = value_to_colour)) +
geom_point(size=3, stroke=0.2) +
geom_vline(xintercept = 1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
geom_vline(xintercept = -1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
theme_light(base_rect_size = 0) +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "gray22", size = 0.35),
panel.grid.major.x = element_line(color = "gray60", size = 0),
panel.grid.minor.x = element_line(color = "gray60", size = 0),
axis.text.y = element_text(size = 12, face= 'bold'),
axis.title.x = element_text(size = 12, face= 'bold', hjust = 0.5),
plot.title = element_text(size = 14, face= 'bold', hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5), ) +
xlab(bquote(~Sign. -Log[10]~ '(P.Value)')) + ylab('') +
ggtitle(label = 'Genotype to drug response cor.', subtitle = 'C2: Mature') +
geom_text_repel(aes(label = ifelse(value > 1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.025,
nudge_y = 0.15,
segment.size = 0.5,
direction = 'x') +
geom_text_repel(aes(label = ifelse(value < -1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0,
nudge_y = -0.15,
segment.size = 1,
direction = 'x') +
scale_colour_gradient(low = '#2171B5', high = '#CB181D', na.value = ggplot2::alpha('grey72', 1)) +
scale_y_discrete(position = "right")
print(plot)
png(filename = paste(figures_folder, '/Fig_06/Panel_E-2.png', sep = ''), units = "px", width = 1876.2, height = 900, res = 300)
print(plot)
invisible(dev.off())
### - C1: Immature
plot <- ggplot(data = Cor_modules_stat_C1_rank_ggplot_df, aes(x=value, y = name,
colour = value_to_colour)) +
geom_point(size=3, stroke=0.2) +
geom_vline(xintercept = 1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
geom_vline(xintercept = -1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
theme_light(base_rect_size = 0) +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "gray22", size = 0.35),
panel.grid.major.x = element_line(color = "gray60", size = 0),
panel.grid.minor.x = element_line(color = "gray60", size = 0),
axis.text.y = element_text(size = 12, face= 'bold'),
axis.title.x = element_text(size = 12, face= 'bold', hjust = 0.5),
plot.title = element_text(size = 14, face= 'bold', hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5), ) +
xlab(bquote(~Sign. -Log[10]~ '(P.Value)')) + ylab('') +
ggtitle(label = 'Genotype to drug response cor.', subtitle = 'C1: Immature') +
geom_text_repel(aes(label = ifelse(value > 1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.05,
nudge_y = 0.35,
segment.size = 0.5,
direction = 'x') +
geom_text_repel(aes(label = ifelse(value < -1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.15,
nudge_y = -0.25,
segment.size = 1,
direction = 'x') +
scale_colour_gradient(low = '#2171B5', high = '#CB181D', na.value = ggplot2::alpha('grey72', 1)) +
scale_y_discrete(position = "right")
print(plot)
png(filename = paste(figures_folder, '/Fig_06/Panel_E-1.png', sep = ''), units = "px", width = 1876.2, height = 1000, res = 300)
print(plot)
invisible(dev.off())
### - C2: Mature
plot <- ggplot(data = Cor_modules_stat_C2_rank_ggplot_df, aes(x=value, y = name,
colour = value_to_colour)) +
geom_point(size=3, stroke=0.2) +
geom_vline(xintercept = 1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
geom_vline(xintercept = -1.30103,
linetype="dashed", alpha = 0.45,
color = "gray44", size=0.75) +
theme_light(base_rect_size = 0) +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "gray22", size = 0.35),
panel.grid.major.x = element_line(color = "gray60", size = 0),
panel.grid.minor.x = element_line(color = "gray60", size = 0),
axis.text.y = element_text(size = 12, face= 'bold'),
axis.title.x = element_text(size = 12, face= 'bold', hjust = 0.5),
plot.title = element_text(size = 14, face= 'bold', hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5), ) +
xlab(bquote(~Sign. -Log[10]~ '(P.Value)')) + ylab('') +
ggtitle(label = 'Genotype to drug response cor.', subtitle = 'C2: Mature') +
geom_text_repel(aes(label = ifelse(value > 1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0.025,
nudge_y = 0.15,
segment.size = 0.5,
direction = 'x') +
geom_text_repel(aes(label = ifelse(value < -1.30103, as.character(Mutation), '')),
size = 4,
nudge_x = -0,
nudge_y = -0.15,
segment.size = 1,
direction = 'x') +
scale_colour_gradient(low = '#2171B5', high = '#CB181D', na.value = ggplot2::alpha('grey72', 1)) +
scale_y_discrete(position = "right")
print(plot)
png(filename = paste(figures_folder, '/Fig_06/Panel_E-2.png', sep = ''), units = "px", width = 1876.2, height = 1000, res = 300)
print(plot)
invisible(dev.off())
